{"version":3,"sources":["Section/SectionStyledComponent.js","Section/Section.js","Button/ButtonStyledComponent.js","Button/Button.js","FeedbackOptions/FeedbackOptionStyledComponent.js","FeedbackOptions/FeedbackOption.js","Notification/NotificationStyledComponent.js","Notification/Notification.js","Statistics/StatisticStyledComponent.js","Statistics/Statistic.js","App.js","index.js"],"names":["Container","styled","section","Title","h2","Section","title","children","ButtonFeedback","button","Button","name","callBack","type","onClick","ContainerButton","div","FeedbackOption","options","onButtonClick","good","neutral","bad","defaultProps","Description","p","Notification","message","List","ul","ListItem","li","Statistic","this","props","feedbackTotal","feedbackPercentage","Component","App","state","handleButtonClick","target","setState","prevState","countTotalFeedback","Object","values","reduce","acc","item","countPositiveFeedbackPercentage","total","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAEaA,EAAYC,IAAOC,QAAV,kLASTC,EAAQF,IAAOG,GAAV,yF,OCMHC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAACP,EAAD,WACE,cAACG,EAAD,UAAQG,IACPC,M,QCNMC,EAAiBP,IAAOQ,OAAV,4MCeZC,I,IAAAA,EAbf,YAAqC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACtB,OACE,cAACJ,EAAD,CAAgBG,KAAMA,EAAME,KAAK,SAASC,QAASF,EAAnD,SACGD,KCLMI,EAAkBd,IAAOe,IAAV,0EAIEf,IAAOQ,OAAV,mFCD3B,SAASQ,EAAT,GAAqD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,cAAiB,cACrBD,EADqB,GAC3CE,EAD2C,KACrCC,EADqC,KAC5BC,EAD4B,KAGlD,OACE,eAACP,EAAD,WACE,cAAC,EAAD,CAAQJ,KAAMS,EAAMR,SAAUO,IAC9B,cAAC,EAAD,CAAQR,KAAMU,EAAST,SAAUO,IACjC,cAAC,EAAD,CAAQR,KAAMW,EAAKV,SAAUO,OAKnCF,EAAeM,aAAe,CAC5BL,QAAS,CAAC,OAAQ,UAAW,QAQhBD,I,EAAAA,ICxBFO,EAAcvB,IAAOwB,EAAV,uECExB,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,cAACH,EAAD,UAAcG,IAGvBD,EAAaH,aAAe,CAC1BI,QAAS,qBAOID,I,MAAAA,ICdFvB,EAAQF,IAAOG,GAAV,mDAGLwB,EAAO3B,IAAO4B,GAAV,gDAGJC,EAAW7B,IAAO8B,GAAV,kFCFAC,E,4JASnB,WAAU,IAAD,EAOHC,KAAKC,MALPC,EAFK,EAELA,cACAC,EAHK,EAGLA,mBACAhB,EAJK,EAILA,KACAE,EALK,EAKLA,IACAD,EANK,EAMLA,QAGF,OAAKc,EAGD,oCACE,cAAC,EAAD,yBACA,eAACP,EAAD,WACE,eAACE,EAAD,oBACQ,+BAAOV,OAEf,eAACU,EAAD,uBACW,+BAAOT,OAElB,eAACS,EAAD,mBACO,+BAAOR,OAEd,eAACQ,EAAD,qBACS,+BAAOK,OAEhB,eAACL,EAAD,iCACqB,iCAAOM,EAAP,iBAnBF,cAAC,EAAD,CAAcT,QAAQ,0B,GAlBdU,aCAlBC,E,4MACnBC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPkB,kBAAoB,YAA2B,IAAd7B,EAAa,EAAvB8B,OAAU9B,KAC/B,EAAK+B,UAAS,SAAAC,GACZ,OAAO,eAAGhC,EAAOgC,EAAUhC,GAAQ,O,EAIvCiC,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKP,OAAOQ,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,I,EAGrEC,gCAAkC,SAAAC,GAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKd,MAAMnB,KAAc+B,I,4CAG9C,WAAU,IAAD,EACwBlB,KAAKM,MAA5BnB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBa,EAAgBF,KAAKW,qBACrBR,EAAqBH,KAAKiB,gCAC9Bf,GAEF,OACE,eAAC,EAAD,CAAS7B,MAAM,wBAAf,UACE,cAAC,EAAD,CACEY,QAAS,CAAC,OAAQ,UAAW,OAC7BC,cAAec,KAAKO,oBAEtB,cAAC,EAAD,CACEL,cAAeA,EACfC,mBAAoBA,EACpBhB,KAAMA,EACNC,QAASA,EACTC,IAAKA,W,GAtCkBe,aCFjCiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.cef86413.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Container = styled.section`\nmax-width: 400px;\npadding: 10px;\n/* outline: 1px solid red; */\nmargin-left: auto;\nmargin-right:auto;\nfont-family: Helvetica, Arial, sans-serif;\n`;\n\nexport const Title = styled.h2`\nmargin: 0  0 20px 0;\nfont-size: 30px;\ntext-align: center;\n`","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Container, Title} from './SectionStyledComponent';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Container>\n      <Title>{title}</Title>\n      {children}\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;","import styled from 'styled-components';\n\nexport const ButtonFeedback = styled.button`\n  font-weight: 700;\n  font-size: 18px;\n  outline: none;\n  padding: 10px;\n  border-radius: 3px;\n  cursor: pointer;\n\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonFeedback } from './ButtonStyledComponent';\n\nfunction Button({ name, callBack }) {\n  return (\n    <ButtonFeedback name={name} type=\"button\" onClick={callBack}>\n      {name}\n    </ButtonFeedback>\n  );\n}\n\nButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  callBack: PropTypes.func,\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const ContainerButton = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nexport const FeedbackButton = styled.button`\n  &:not(::last-child) {\n    margin-right: 10px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\nimport { ContainerButton } from './FeedbackOptionStyledComponent';\n\nfunction FeedbackOption({ options, onButtonClick }) {\n  const [good, neutral, bad] = options;\n\n  return (\n    <ContainerButton>\n      <Button name={good} callBack={onButtonClick} />\n      <Button name={neutral} callBack={onButtonClick} />\n      <Button name={bad} callBack={onButtonClick} />\n    </ContainerButton>\n  );\n}\n\nFeedbackOption.defaultProps = {\n  options: ['good', 'neutral', 'bad'],\n};\n\nFeedbackOption.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOption;\n","import styled from 'styled-components';\n\nexport const Description = styled.p`\n  font-size: 20px;\n  text-align: center;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Description } from './NotificationStyledComponent';\n\nfunction Notification({ message }) {\n  return <Description>{message}</Description>;\n}\n\nNotification.defaultProps = {\n  message: 'No feedback given',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\nexport const List = styled.ul`\n  font-size: 20px;\n`;\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n","import React, { Component } from 'react';\nimport Notification from '../Notification';\n\nimport PropTypes from 'prop-types';\nimport { List, Title, ListItem } from './StatisticStyledComponent';\n\nexport default class Statistic extends Component {\n  static propTypes = {\n    feedbackTotal: PropTypes.number.isRequired,\n    feedbackPercentage: PropTypes.number.isRequired,\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  };\n\n  render() {\n    const {\n      feedbackTotal,\n      feedbackPercentage,\n      good,\n      bad,\n      neutral,\n    } = this.props;\n\n    if (!feedbackTotal) return <Notification message=\"No feedback given\" />;\n    else\n      return (\n        <section>\n          <Title>Statistics</Title>\n          <List>\n            <ListItem>\n              Good: <span>{good}</span>\n            </ListItem>\n            <ListItem>\n              Neutral: <span>{neutral}</span>\n            </ListItem>\n            <ListItem>\n              Bad: <span>{bad}</span>\n            </ListItem>\n            <ListItem>\n              Total: <span>{feedbackTotal}</span>\n            </ListItem>\n            <ListItem>\n              Positive feedback: <span>{feedbackPercentage} %</span>\n            </ListItem>\n          </List>\n        </section>\n      );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Section from './Section';\nimport FeedbackOption from './FeedbackOptions';\nimport Statistics from './Statistics';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleButtonClick = ({ target: { name } }) => {\n    this.setState(prevState => {\n      return { [name]: prevState[name] + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, item) => acc + item, 0);\n  };\n\n  countPositiveFeedbackPercentage = total => {\n    return Math.round((this.state.good * 100) / total);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const feedbackTotal = this.countTotalFeedback();\n    const feedbackPercentage = this.countPositiveFeedbackPercentage(\n      feedbackTotal,\n    );\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOption\n          options={['good', 'neutral', 'bad']}\n          onButtonClick={this.handleButtonClick}\n        />\n        <Statistics\n          feedbackTotal={feedbackTotal}\n          feedbackPercentage={feedbackPercentage}\n          good={good}\n          neutral={neutral}\n          bad={bad}\n        />\n      </Section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}